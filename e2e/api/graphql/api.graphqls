"""
@exampleString directive specifies an example value for a String field.
This example value is used in the fake data.

Note: This is for @newmo/graphql-fake-server
"""
directive @exampleString(
    """
    The value of the String field.
    @exampleString(value: "example")
    """
    value: String!
) on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION


type Query {
    """
    Get the list of destination candidates.
    """
    destinationCandidates(text: String!): [Destination!]!

    """
    Get the list of ride histories.
    """
    rideHistories: [RideHistory!]!
}

type RideHistory {
    "ID of the ride history."
    id: ID!

    "Destination of the ride history."
    destination: Destination!
}

enum DestinationType {
    "Airport"
    AIRPORT

    "Station"
    STATION

    "City"
    CITY
}

type Destination {
    "ID of the destination."
    id: ID!

    "Name of the destination."
    name: String! @exampleString(value: "Osaka")

    "Type of the destination."
    type: DestinationType!
}
"""
Error interface
"""
interface Error {
    "Error message."
    message: String!
}
type TextError implements Error {
    "Error message."
    message: String!

    "Localized error message."
    localizedMessage: String!
}
"""
Specified Error type for createRideHistory mutation.
"""
type CreateRideHistoryErrorDetails implements Error{
    code: Int!
    message: String!
    localizedMessage: String!
}
union ErrorUnion = TextError | CreateRideHistoryErrorDetails

input RideHistoryInput {
    "Name of the destination."
    name: String! @exampleString(value: "Tokyo")
}
type RideHistoryOutput {
    "ID of the ride history."
    id: ID!
    "Name of the destination."
    name: String! @exampleString(value: "Tokyo")

    "Error."
    errors: [ErrorUnion!]!
}
"""
namingConvention test
- URL
- Create*
"""
type FooURLResource {
    "Foo URL"
    URL: String!
}
input FooURLInput {
    "Foo URL"
    URL: String!
}
type FooURLPayload {
    "Foo URL"
    URL: String!
    "Errors"
    errors: [CreateFooURLError!]!
}
union CreateFooURLError = CreateFooURLErrorDetail
type CreateFooURLErrorDetail implements Error {
    code: CreateFooURLErrorCode!
    message: String!
    localizedMessage: String!
}
enum CreateFooURLErrorCode {
    FAILED_TO_CREATE_FOO_URL
}

type Mutation {
    """
    Create Ride History
    """
    createRideHistory(input: RideHistoryInput!): RideHistoryOutput!

    """
    Create Foo URL
    """
    createFooURL(input: FooURLInput!): FooURLPayload!
}
