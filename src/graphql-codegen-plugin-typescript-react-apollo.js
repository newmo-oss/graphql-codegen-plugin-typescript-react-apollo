const plugin = {
    plugin(schema, documents, _config, _info) {
        const documentNames = documents.map(doc => doc.document.definitions.map(def => def.name.value)).flat();
        const generateSuspenseQuery = (name) => {
            return `export function use${name}SuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<${name}Query, ${name}QueryVariables>) {
    const options = { ...baseOptions };
    return Apollo.useSuspenseQuery<${name}Query, ${name}QueryVariables>(${name}Document, options);
}`;
        
        };
        const importIdentifierName = (documentName) => {
            return `import { ${documentName}Document, ${documentName}Query, ${documentName}QueryVariables } from './graphql';`;
        };
        return `/* eslint-disable */
// This file was generated by a @newmo/graphql-codegen-plugin-typescript-react-apollo
import * as Apollo from '@apollo/client';
${documentNames.map(name => {
            return importIdentifierName(name);
        }).join("\n")}
${documentNames.map(name => {
            return generateSuspenseQuery(name);
        }).join("\n")}
`;
    }
};
module.exports = plugin;
