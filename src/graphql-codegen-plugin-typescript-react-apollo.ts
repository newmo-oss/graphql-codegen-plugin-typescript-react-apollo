import type { CodegenPlugin } from "@graphql-codegen/plugin-helpers";

export type PluginConfig = {
    /**
     * The path to the generated types file
     * @example
     * typeFile: "./graphql.ts"
     **/
    typesFile: string;
};
const plugin: CodegenPlugin<PluginConfig> = {
    plugin(schema, documents, config, _info) {
        // need to support mutation, query, subscription
        const generateSuspenseQuery = (name: string) => {
            return `export function use${name}SuspenseQuery(baseOptions?: Apollo.SuspenseQueryHookOptions<${name}Query, ${name}QueryVariables>): Apollo.UseSuspenseQueryResult<${name}Query, ${name}QueryVariables> {
    const options = { ...baseOptions };
    return Apollo.useSuspenseQuery<${name}Query, ${name}QueryVariables>(${name}Document, options);
}`;
        };
        const generateSuspenseMutation = (name: string) => {
            return `export function use${name}SuspenseMutation(baseOptions?: Apollo.MutationHookOptions<${name}Mutation, ${name}MutationVariables>): Apollo.MutationTuple<${name}Mutation, ${name}MutationVariables> {
    const options = { ...baseOptions };
    return Apollo.useMutation<${name}Mutation, ${name}MutationVariables>(${name}Document, options);
}`;
        };
        const importQueryIdentifierName = (documentName: string) => {
            return `import { ${documentName}Document, ${documentName}Query, ${documentName}QueryVariables } from '${config.typesFile}';`;
        };
        const importMutationIdentifierName = (documentName: string) => {
            return `import { ${documentName}Document, ${documentName}Mutation, ${documentName}MutationVariables } from '${config.typesFile}';`;
        };
        return `/* eslint-disable */
// This file was generated by a @newmo/graphql-codegen-plugin-typescript-react-apollo
import * as Apollo from '@apollo/client';
${documents
            .flatMap((document) => {
                return document.document?.definitions?.map((definition) => {
                    // query
                    if (definition.kind === "OperationDefinition" && definition.operation === "query" && definition.name) {
                        return importQueryIdentifierName(definition.name.value);
                    } else if (
                        definition.kind === "OperationDefinition" &&
                        definition.operation === "mutation" &&
                        definition.name
                    ) {
                        return importMutationIdentifierName(definition.name.value);
                    }
                });
            })
            .join("\n")}
${documents
            .flatMap((document) => {
                return document.document?.definitions?.map((definition) => {
                    // query
                    if (definition.kind === "OperationDefinition" && definition.operation === "query" && definition.name) {
                        return generateSuspenseQuery(definition.name.value);
                    } else if (
                        definition.kind === "OperationDefinition" &&
                        definition.operation === "mutation" &&
                        definition.name
                    ) {
                        return generateSuspenseMutation(definition.name.value);
                    }
                });
            })
            .join("\n")}
`;
    }
};
// GraphQL Codegen Plugin requires CommonJS export
module.exports = plugin;
